name: get_files
on:
  workflow_dispatch:
    inputs:
      URL:
        description: "待操作的系统包下载地址"
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: 1.准备环境
        run: |
          echo "date=$(echo ${{ github.event.inputs.URL }} | cut -d"/" -f4)" >> $GITHUB_ENV
          device1=$(echo ${{ github.event.inputs.URL }} | cut -d"_" -f2)
          echo "device=$(echo ${device1,,})" >> $GITHUB_ENV
          sudo apt install python3 python3-pip aria2 zip p7zip-full tar zipalign zstd dos2unix
          sudo apt --fix-broken install
          sudo apt update --fix-missing
          pip3 install --upgrade pip
          pip3 install pycryptodome
          pip3 install setuptools
          pip3 install docopt
          pip3 install requests
          pip3 install beautifulsoup4
          pip3 install --ignore-installed pyyaml
          mkdir -p "$GITHUB_WORKSPACE"/get_files
          sudo chmod -R 777 "$GITHUB_WORKSPACE"/tools
      - name: 2.下载系统包
        run: |
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ github.event.inputs.URL }}
      - name: 3.检测payload/br
        run: |
          ZIP_NAME=$(echo ${{ github.event.inputs.URL }} | cut -d"/" -f5)
          7z x "$GITHUB_WORKSPACE"/$ZIP_NAME -r -o"$GITHUB_WORKSPACE"/${{ env.device }} && rm -rf "$GITHUB_WORKSPACE"/$ZIP_NAME
          if [[ -e "$GITHUB_WORKSPACE"/${{ env.device }}/payload.bin ]]; then
              echo "unpack=payload" >> $GITHUB_ENV
          else
              echo "unpack=br" >> $GITHUB_ENV
          fi
      - if: ${{ env.unpack == 'payload' }}
        name: 4.解压payload
        run: |
          for i in system odm system_ext product vendor mi_ext; do
              "$GITHUB_WORKSPACE"/tools/payload-dumper-go -o "$GITHUB_WORKSPACE"/${{ env.device }}/ -p $i "$GITHUB_WORKSPACE"/${{ env.device }}/payload.bin
              if [[ $("$GITHUB_WORKSPACE"/tools/gettype -i "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img) == "ext" ]]; then
                  sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux/imgextractorLinux.py "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img "$GITHUB_WORKSPACE"/${{ env.device }}
              elif [[ $("$GITHUB_WORKSPACE"/tools/gettype -i "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img) == "erofs" ]]; then
                  cd "$GITHUB_WORKSPACE"/${{ env.device }} && "$GITHUB_WORKSPACE"/tools/extract.erofs -i "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img -x && cd "$GITHUB_WORKSPACE"
              fi
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img
          done
          sudo rm -rf  "$GITHUB_WORKSPACE"/${{ env.device }}/config "$GITHUB_WORKSPACE"/${{ env.device }}/TI_config "$GITHUB_WORKSPACE"/${{ env.device }}/payload.bin
      - if: ${{ env.unpack == 'br' }}
        name: 4.解压br
        run: |
          for i in system odm system_ext product vendor mi_ext; do
              if [[ $i == mi_ext ]]; then
                  if [ -e "$GITHUB_WORKSPACE"/${{ env.device }}/mi_ext.dat.br ]; then
                      echo "has_mi_ext=true" >> $GITHUB_ENV
                  else
                      echo "has_mi_ext=false" >> $GITHUB_ENV
                      break
                  fi
              fi
              "$GITHUB_WORKSPACE"/tools/brotli -d "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat.br
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat.br
              python3 "$GITHUB_WORKSPACE"/tools/sdat2img.py "$GITHUB_WORKSPACE"/${{ env.device }}/$i.transfer.list "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.patch.dat "$GITHUB_WORKSPACE"/${{ env.device }}/$i.transfer.list "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat
              if [[ $("$GITHUB_WORKSPACE"/tools/gettype -i "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img) == "ext" ]]; then
                  sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux/imgextractorLinux.py "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img "$GITHUB_WORKSPACE"/${{ env.device }}
              elif [[ $("$GITHUB_WORKSPACE"/tools/gettype -i "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img) == "erofs" ]]; then
                  cd "$GITHUB_WORKSPACE"/${{ env.device }} && "$GITHUB_WORKSPACE"/tools/extract.erofs -i "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img -x && cd "$GITHUB_WORKSPACE"
              fi
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img
          done
          sudo rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/TI_config "$GITHUB_WORKSPACE"/${{ env.device }}/config
      - name: 5.提取指定文件
        run: |
          mkdir -p "$GITHUB_WORKSPACE"/get_files/product
          sudo 7z a "$GITHUB_WORKSPACE"/get_files/camera.zip "$GITHUB_WORKSPACE"/"$device"/product/priv-app/MiuiCamera*
        env:
          device: ${{ env.device }}
      - name: 6.打包
        run: |
          mkdir -p "$GITHUB_WORKSPACE"/zip
          sudo chmod -R 777 "$GITHUB_WORKSPACE"/get_files
          7z a "$GITHUB_WORKSPACE"/zip/"$device"_get_files.zip "$GITHUB_WORKSPACE"/get_files/*
          mv "$GITHUB_WORKSPACE"/zip/"$device"_get_files.zip "$GITHUB_WORKSPACE"/zip/"$device"_"${{ env.date }}"_"$number".zip
          cd "$GITHUB_WORKSPACE"
          touch file.log
          echo "${{ github.event.inputs.info }}" > file.log
        env:
          device: ${{ env.device }}
      - name: 7.上传到Github Release
        uses: ncipollo/release-action@main
        with:
          artifacts: ${{ github.workspace }}/zip/*
          name: ${{ env.device }}
          tag: ${{ env.device }}
          bodyFile: "${{ github.workspace }}/file.log"
          allowUpdates: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
